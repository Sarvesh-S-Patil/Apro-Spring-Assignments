package com.apro.main.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.apro.main.DTO.InstructorDTO;
import com.apro.main.entity.Course;
import com.apro.main.entity.Instructor;
import com.apro.main.repository.CourseRepo;
import com.apro.main.repository.InstructorRepo;

@Service
public class InstructorServiceImpl implements InstructorService {

	@Autowired
	InstructorRepo instructorRepo;
	@Autowired 
	CourseRepo courseRepo;
	@Override
	public Instructor addInstructor(InstructorDTO instructorDTO) {
		Instructor instructor = new Instructor();
		instructor.setInstructorId(instructorDTO.getInstructorId());
		instructor.setEmail(instructorDTO.getEmail());
		instructor.setInstructorName(instructorDTO.getInstructorName());
		instructor.setQualification(instructorDTO.getQualification());
		return instructorRepo.save(instructor);
	}
	@Override
	public Instructor allocateCourses(int instructorId,List<Course> courses) {
		Instructor instructor ;
		Optional<Instructor> optionalInstructor  =instructorRepo.findById(instructorId);
		if(!optionalInstructor.isPresent()) {
			return null;
		}
		instructor=optionalInstructor.get();
		List<Course> dbCourses = instructor.getCourses();
		courses.forEach(
				(course)-> {
					Course temp = courseRepo.findById(course.getCourseId()).get();
					temp.setInstructor(instructor);
					dbCourses.add(temp);
				}
				
		);
		instructor.setCourses(dbCourses);
		return instructorRepo.save(instructor);
	}
	
	
	public Instructor toInstructorMapper(InstructorDTO instructorDTO) {
		Instructor instructor = new Instructor();
		instructor.setInstructorId(instructorDTO.getInstructorId());
		instructor.setEmail(instructorDTO.getEmail());
		instructor.setInstructorName(instructorDTO.getInstructorName());
		instructor.setQualification(instructorDTO.getQualification());
		return instructor;
	}

}
